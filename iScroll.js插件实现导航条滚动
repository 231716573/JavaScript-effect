http://www.cnblogs.com/duanhuajian/archive/2013/04/08/3008323.html

<nav>
	<div id="wrapper">
			<div class="scroll" id="scroll">
				<a href="javascript:void(0);" class="active">全部</a>
				<a href="javascript:void(0);">越秀区</a>
				<a href="javascript:void(0);">天河区</a>
				<a href="javascript:void(0);">海珠区</a>
				<a href="javascript:void(0);">荔湾区</a>
				<a href="javascript:void(0);">其他</a>
			</div>
	</div>
</nav>


css:

nav { height:50px; overflow: hidden; margin:20px 10px; position: relative;}
nav #wrapper .scroll { width: 450px; transition-timing-function: cubic-bezier(0.1, 0.57, 0.1, 1);
                       transition-duration: 0ms;transform: translate(0px, 0px) translateZ(0px);}
                       
                       
JS:

var Scroll = new iScroll('wrapper',{ vScroll :false,hScrollbar: false,eventPassthrough: true, scrollX: true, scrollY: false, preventDefault: false });

第二个参数通常都是一个对象，像上面的这个例子里就设定了不显示滚动条。常用的参数如下：
     hScroll                 false 禁止横向滚动 true横向滚动 默认为true
     vScroll                 false 精致垂直滚动 true垂直滚动 默认为true
     hScrollbar              false隐藏水平方向上的滚动条
     vScrollbar              false 隐藏垂直方向上的滚动条
     fixedScrollbar          在iOS系统上，当元素拖动超出了scroller的边界时，滚动条会收缩，设置为true可以禁止滚动条超出
                                scroller的可见区域。默认在Android上为true， iOS上为false
     fadeScrollbar  　       false 指定在无渐隐效果时隐藏滚动条
     hideScrollbar  　       在没有用户交互时隐藏滚动条 默认为true
     bounce            　    启用或禁用边界的反弹，默认为true
     momentum     　         启用或禁用惯性，默认为true，此参数在你想要保存资源的时候非常有用
     lockDirection           false取消拖动方向的锁定， true拖动只能在一个方向上（up/down 或者left/right）
